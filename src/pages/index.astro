---
import Layout from "../layouts/Layout.astro";
import { getBlogPosts } from "../lib/contentful";
import InstagramLogo from "phosphor-astro/InstagramLogo.astro";
import XLogo from "phosphor-astro/XLogo.astro";
import LinkedinLogo from "phosphor-astro/LinkedinLogo.astro";
import GithubLogo from "phosphor-astro/GithubLogo.astro";

const posts = await getBlogPosts();

// Helper to extract text from Contentful rich text
function extractTextFromRichText(node: any): string {
  if (!node) return "";
  if (typeof node === "string") return node;
  if (Array.isArray(node)) return node.map(extractTextFromRichText).join(" ");
  if (node.nodeType === "text") return node.value;
  if (node.content) return extractTextFromRichText(node.content);
  return "";
}

function getReadingTime(body: any): number {
  if (!body) return 1;
  const text = extractTextFromRichText(body);
  const wordCount = text.trim().split(/\s+/).length;
  return Math.max(1, Math.ceil(wordCount / 200));
}

// Get unique categories from posts
const categories = Array.from(new Set(posts.map(post => post.fields.category).filter(Boolean)));
const allCategories = ["Tümü", ...categories];
---

<Layout>
  <main class="min-h-screen bg-white text-black font-montserrat">
    <!-- Header Section -->
    <header class="px-4 pt-18 pb-8 flex flex-col items-center">
      <img src="/logo-wide-dark.webp" alt="MultiGroup Logo" class="h-14 md:h-20 mb-6" />
      <p class="italic text-center text-gray-500 text-lg mb-4">
        "Where Developers Become Together"
      </p>
      <div class="flex gap-2 justify-center items-center mb-8 text-sm md:text-base text-gray-600">
        <a
          href="https://www.instagram.com/devmultigroup/"
          aria-label="Instagram"
          class="hover:text-red-600 transition-all duration-300"
          target="_blank"
        >
          Instagram
        </a>
        <span>/</span>
        <a
          href="https://x.com/devmultigroup"
          aria-label="X"
          class="hover:text-red-600 transition-all duration-300"
          target="_blank"
        >
          Twitter
        </a>
        <span>/</span>
        <a
          href="https://www.linkedin.com/company/devmultigroup/"
          aria-label="LinkedIn"
          class="hover:text-red-600 transition-all duration-300"
          target="_blank"
        >
          LinkedIn
        </a>
        <span>/</span>
        <a
          href="https://github.com/Developer-MultiGroup"
          aria-label="Github"
          class="hover:text-red-600 transition-all duration-300"
          target="_blank"
        >
          Github
        </a>
        <span>/</span>
        <a
          href="https://etkinlik.devmultigroup.com/"
          aria-label="Etkinlikler"
          class="hover:text-red-600 transition-all duration-300"
          target="_blank"
        >
          Etkinlikler
        </a>
      </div>
    </header>

    <!-- Main Content Area -->
    <div class="max-w-6xl mx-auto px-4">
      <!-- Category Filter and Search Bar -->
      <div class="flex flex-col md:flex-row md:items-center md:justify-between mb-8 gap-4">
        <!-- Category Filter -->
        <div class="flex flex-wrap gap-4">
          {allCategories.map((category) => (
            <button
              class="category-filter px-3 py-1 text-sm border border-gray-300 rounded hover:bg-gray-50 transition-colors"
              data-category={category === "Tümü" ? "" : category}
            >
              {category}
            </button>
          ))}
        </div>
        
        <!-- Search Bar -->
        <div class="flex items-center gap-2">
          <input
            id="searchInput"
            type="text"
            placeholder="Ara..."
            class="px-4 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-red-500"
            autocomplete="off"
          />
        </div>
      </div>

      <!-- Blog Posts Grid -->
      <div id="blogList" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {
          posts.map((post) => {
            const { title, description, writers, body, cover, category, date } = post.fields;
            const createdAt = post.sys.createdAt;
            const formattedDate = date ? 
              new Date(date).toLocaleDateString("tr-TR", {
                year: "numeric",
                month: "long",
                day: "numeric",
              }) :
              new Date(createdAt).toLocaleDateString("tr-TR", {
                year: "numeric",
                month: "long",
                day: "numeric",
              });
            const readingTime = getReadingTime(body);
            const coverUrl = cover?.fields?.file?.url;
            
            return (
              <article
                class="blog-item border border-gray-200 rounded-lg overflow-hidden hover:shadow-lg transition-shadow"
                data-title={title}
                data-description={description}
                data-writers={Array.isArray(writers) ? writers.join(", ") : ""}
                data-category={category || ""}
              >
                <a href={`/blog/${post.fields.slug}`} class="block group">
                  <!-- Cover Image -->
                  <div class="aspect-[16/9] bg-gray-100 overflow-hidden">
                    {coverUrl ? (
                      <img
                        src={`https:${coverUrl}`}
                        alt={title}
                        class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                      />
                    ) : (
                      <div class="w-full h-full bg-gradient-to-br from-gray-200 to-gray-300 flex items-center justify-center">
                        <div class="text-center text-gray-500">
                          <svg class="w-12 h-12 mx-auto mb-2" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z" clip-rule="evenodd" />
                          </svg>
                          <p class="text-xs font-medium">MultiGroup</p>
                        </div>
                      </div>
                    )}
                  </div>
                  
                  <!-- Content -->
                  <div class="p-4">
                    <!-- Metadata -->
                    <div class="flex items-center justify-between mb-2">
                      <span class="text-xs text-gray-500">
                        {Array.isArray(writers) && writers.length > 0 ? `${writers.length} yazar` : "1 yazar"} · {formattedDate}
                      </span>
                      <span class="text-xs text-gray-400">{readingTime} dk</span>
                    </div>
                    
                    <!-- Title -->
                    <h2 class="text-lg font-semibold group-hover:text-red-600 transition-colors mb-2 line-clamp-2">
                      {String(title) || "Untitled Post"}
                    </h2>
                    
                    <!-- Description -->
                    <p class="text-gray-700 text-sm line-clamp-2 mb-3">
                      {typeof description === "string" ? description : ""}
                    </p>
                    
                    <!-- Category -->
                    {category && (
                      <span class="inline-block px-2 py-1 text-xs bg-gray-100 text-gray-600 rounded">
                        {category}
                      </span>
                    )}
                  </div>
                </a>
              </article>
            );
          })
        }
      </div>
    </div>
  </main>
</Layout>

<script>
  let currentCategory = "";
  
  function filterPosts() {
    const searchInput = document.getElementById('searchInput');
    if (!searchInput) return;
    
    const searchTerm = searchInput.value.toLowerCase().trim();
    const posts = document.querySelectorAll('.blog-item');
    
    posts.forEach(post => {
      const title = post.dataset.title?.toLowerCase() || '';
      const description = post.dataset.description?.toLowerCase() || '';
      const writers = post.dataset.writers?.toLowerCase() || '';
      const category = post.dataset.category || '';
      
      const matchesSearch = !searchTerm || 
        title.includes(searchTerm) || 
        description.includes(searchTerm) || 
        writers.includes(searchTerm);
      
      const matchesCategory = !currentCategory || category === currentCategory;
      
      if (matchesSearch && matchesCategory) {
        post.style.display = 'block';
      } else {
        post.style.display = 'none';
      }
    });
  }
  
  function setActiveCategory(category) {
    currentCategory = category;
    
    // Update active button styling
    document.querySelectorAll('.category-filter').forEach(btn => {
      btn.classList.remove('bg-red-600', 'text-white');
      btn.classList.add('border-gray-300', 'hover:bg-gray-50');
    });
    
    const activeBtn = document.querySelector(`[data-category="${category}"]`);
    if (activeBtn) {
      activeBtn.classList.add('bg-red-600', 'text-white');
      activeBtn.classList.remove('border-gray-300', 'hover:bg-gray-50');
    }
    
    filterPosts();
  }
  
  // Initialize everything when DOM is ready
  document.addEventListener('DOMContentLoaded', () => {
    // Set up search input event listeners
    const searchInput = document.getElementById('searchInput');
    if (searchInput) {
      // Multiple event types for better compatibility
      searchInput.addEventListener('input', filterPosts);
      searchInput.addEventListener('keyup', filterPosts);
      searchInput.addEventListener('change', filterPosts);
    }
    
    // Set up category filter buttons
    document.querySelectorAll('.category-filter').forEach(btn => {
      btn.addEventListener('click', () => {
        setActiveCategory(btn.dataset.category);
      });
    });
    
    // Set initial active state for "Tümü" button
    const allBtn = document.querySelector('[data-category=""]');
    if (allBtn) {
      allBtn.classList.add('bg-red-600', 'text-white');
      allBtn.classList.remove('border-gray-300', 'hover:bg-gray-50');
    }
    
    // Initial filter to show all posts
    filterPosts();
  });
</script>

---
import Layout from '../layouts/Layout.astro';
import { getBlogPosts } from '../lib/contentful';
const posts = await getBlogPosts();

// Helper to extract text from Contentful rich text
function extractTextFromRichText(node: any): string {
	if (!node) return '';
	if (typeof node === 'string') return node;
	if (Array.isArray(node)) return node.map(extractTextFromRichText).join(' ');
	if (node.nodeType === 'text') return node.value;
	if (node.content) return extractTextFromRichText(node.content);
	return '';
}

function getReadingTime(body: any): number {
	if (!body) return 1;
	const text = extractTextFromRichText(body);
	const wordCount = text.trim().split(/\s+/).length;
	return Math.max(1, Math.ceil(wordCount / 200));
}
---

<Layout>
	<main class="min-h-screen bg-white text-black px-4 py-12 font-montserrat">
		<div class="max-w-2xl mx-auto">
			<h1 class="text-3xl font-bold mb-8 text-center">Blog Yazıları</h1>
			<input
				id="searchInput"
				type="text"
				placeholder="Yazı başlığı veya açıklama ara..."
				class="w-full mb-8 px-4 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-accent"
				oninput="filterPosts()"
				autocomplete="off"
			/>
			<div id="blogList">
				{posts.map(post => {
					const { title, description, writers, body } = post.fields;
					const createdAt = post.sys.createdAt;
					const formattedDate = new Date(createdAt).toLocaleDateString('tr-TR', {
						year: 'numeric',
						month: '2-digit',
						day: '2-digit',
					});
					const readingTime = getReadingTime(body);
					return (
						<div class="py-6 border-b border-gray-200 blog-item" data-title={title} data-description={description} data-writers={Array.isArray(writers) ? writers.join(', ') : ''}>
							<div class="flex items-center justify-between mb-1">
								<span class="italic text-gray-500 text-xs">{formattedDate} • {readingTime} dk</span>
							</div>
							<a href={`/blog/${post.fields.slug}`} class="block group">
								<h2 class="text-lg font-semibold group-hover:text-accent transition-colors mb-1">{String(title) || 'Untitled Post'}</h2>
							</a>
							<p class="text-gray-700 text-sm line-clamp-2 mb-1">{typeof description === 'string' ? description : ''}</p>
							{Array.isArray(writers) && writers.length > 0 && (
								<p class="text-xs text-gray-400 mt-1">{writers.length === 1 ? 'Yazar:' : 'Yazarlar:'} {writers.join(', ')}</p>
							)}
						</div>
					);
				})}
			</div>
		</div>
		<script>
			function filterPosts() {
				const input = document.getElementById('searchInput');
				if (!input) return;
				const filter = (input as HTMLInputElement).value.toLowerCase();
				const items = document.querySelectorAll('.blog-item');
				items.forEach(item => {
					if (!(item instanceof HTMLElement)) return;
					const title = item.getAttribute('data-title')?.toLowerCase() || '';
					const desc = item.getAttribute('data-description')?.toLowerCase() || '';
					const writers = item.getAttribute('data-writers')?.toLowerCase() || '';
					if (title.includes(filter) || desc.includes(filter) || writers.includes(filter)) {
						item.style.display = '';
					} else {
						item.style.display = 'none';
					}
				});
			}
		</script>
	</main>
</Layout>
